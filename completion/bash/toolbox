# Check for bash
[ -z "$BASH_VERSION" ] && return

__toolbox_containers() {
  podman ps --all --format '{{.Names}}' 2>/dev/null
}

__toolbox_images() {
  podman images --format '{{.Repository}}:{{.Tag}}' 2>/dev/null
}

__toolbox() {
  local MIN_VERSION=29
  local RAWHIDE_VERSION=32

  local commands="create enter help init-container list rm rmi run"
  local global_options="--assumeyes --help --verbose"

  declare -A options
  local options=([create]="--candidate-registry --container --image --release" \
                 [enter]="--container --release" \
                 [help]="$commands" \
                 [init-container]="--home --home-link --monitor-host --shell --uid --user" \
		 [list]="--containers --images" \
		 [rm]="--all --force" \
		 [rmi]="--all --force" \
		 [run]="--container --release")

  _init_completion -s || return

  # If there are no args, show everything
  if [ "${COMP_CWORD}" -eq 1 ]; then
    mapfile -t COMPREPLY < <(compgen -W "$global_options $commands" -- "$2")
    return 0
  fi

  # If a global option is mentioned, don't mention it anymore
  for option in $global_options; do
    if [[ "${COMP_LINE}" =~ "$option" ]]; then
      global_options="${global_options/$option}"
    fi
  done

  # If line contains a command, allow completion of command specific options
  # If not, allow completion only for global options
  for command in $commands; do
    if [[ "${COMP_LINE}"  =~ " $command " ]]; then
      case "$prev" in
        --container | -c)
          mapfile -t COMPREPLY < <(compgen -W "$(__toolbox_containers)" -- "$2")
          return 0
          ;;
        --image | -i)
          mapfile -t COMPREPLY < <(compgen -W "$(__toolbox_images)" -- "$2")
          return 0
          ;;
        --release | -r)
          mapfile -t COMPREPLY < <(compgen -W "$(seq $MIN_VERSION $RAWHIDE_VERSION)" -- "$2")
          return 0
          ;;
      esac
    else
      case "$prev" in
        --verbose | -v | --help | -h | --assumeyes | -y)
          mapfile -t COMPREPLY < <(compgen -W "$global_options $commands" -- "$2")
          return 0
          ;;
      esac
    fi
  done

  # If last arg is a command, complete it and offer it's local options
  case "$prev" in
    rm)
      mapfile -t COMPREPLY < <(compgen -W "${options[$prev]} $(__toolbox_containers)" -- "$2")
      ;;
    rmi)
      mapfile -t COMPREPLY < <(compgen -W "${options[$prev]} $(__toolbox_images)" -- "$2")
      ;;
    *)
      mapfile -t COMPREPLY < <(compgen -W "${options[$prev]}" -- "$2")
      return 0;
      ;;
  esac
}

complete -F __toolbox toolbox
